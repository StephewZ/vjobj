# Generated by Django 2.0 on 2018-02-03 02:32

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('inst_id', models.IntegerField(default=0)),
                ('nickname', models.CharField(default='', max_length=50)),
                ('creator', models.IntegerField(default=0)),
                ('phone', models.CharField(blank=True, max_length=16, null=True)),
                ('address', models.CharField(default='', max_length=100)),
                ('is_delete', models.BooleanField(default=False)),
                ('user_type', models.IntegerField(default=0)),
                ('edit_time', models.DateTimeField(default=datetime.datetime.now)),
                ('remark', models.CharField(default='', max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='accounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('wechat_openId', models.CharField(blank=True, max_length=28, null=True)),
                ('wechat_merchant', models.CharField(blank=True, max_length=32, null=True)),
                ('wechat_appId', models.CharField(blank=True, max_length=32, null=True)),
                ('wechat_appSecret', models.CharField(blank=True, max_length=32, null=True)),
                ('wechat_apiSecret', models.CharField(blank=True, max_length=64, null=True)),
                ('wechat_certificate', models.CharField(blank=True, max_length=64, null=True)),
                ('wechat_certificate_password', models.CharField(blank=True, max_length=64, null=True)),
                ('wechat_personalAccount', models.CharField(blank=True, max_length=64, null=True)),
                ('wechat_personalName', models.CharField(blank=True, max_length=128, null=True)),
                ('wechat_rate', models.IntegerField(default=100)),
                ('alipay_appId', models.CharField(blank=True, max_length=32, null=True)),
                ('alipay_privateKey', models.CharField(blank=True, max_length=4096, null=True)),
                ('alipay_publicKey', models.CharField(blank=True, max_length=4096, null=True)),
                ('alipay_sellerId', models.CharField(blank=True, max_length=28, null=True)),
                ('alipay_productCode', models.CharField(blank=True, max_length=64, null=True)),
                ('alipay_personalAccount', models.CharField(blank=True, max_length=64, null=True)),
                ('alipay_personalName', models.CharField(blank=True, max_length=128, null=True)),
                ('alipay_rate', models.IntegerField(default=100)),
                ('hotline', models.CharField(blank=True, max_length=64, null=True)),
                ('qrcode', models.CharField(blank=True, max_length=256, null=True)),
                ('create_time', models.DateTimeField(default=datetime.datetime.now)),
                ('edit_time', models.DateTimeField(default=datetime.datetime.now)),
                ('remark', models.CharField(default='', max_length=255)),
            ],
            options={
                'db_table': 'accounts',
            },
        ),
        migrations.CreateModel(
            name='devices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_num', models.IntegerField(blank=True, null=True)),
                ('inst_id', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(default=0)),
                ('name', models.CharField(default='', max_length=48)),
                ('creator', models.IntegerField(default=1)),
                ('create_time', models.DateTimeField(default=datetime.datetime.now)),
                ('edit_time', models.DateTimeField(default=datetime.datetime.now)),
                ('remark', models.CharField(default='', max_length=255)),
            ],
            options={
                'db_table': 'devices',
            },
        ),
        migrations.CreateModel(
            name='funcmodule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pipe_id', models.CharField(default='', max_length=255)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(default='', max_length=50)),
                ('url', models.CharField(default='', max_length=255)),
                ('is_leaf', models.BooleanField(default=True)),
                ('is_enabled', models.BooleanField(default=True)),
                ('sort_num', models.IntegerField(blank=True, null=True)),
                ('remark', models.CharField(default='', max_length=255)),
            ],
            options={
                'db_table': 'funcmodule',
            },
        ),
        migrations.CreateModel(
            name='institutions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pipe_id', models.CharField(default='', max_length=255)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('is_leaf', models.BooleanField(default=True)),
                ('inst_type', models.CharField(default=1, max_length=255)),
                ('name', models.CharField(default='', max_length=50)),
                ('creator', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(default=datetime.datetime.now)),
                ('edit_time', models.DateTimeField(default=datetime.datetime.now)),
                ('is_delete', models.BooleanField(default=False)),
                ('remark', models.CharField(default='', max_length=255)),
            ],
            options={
                'db_table': 'institutions',
            },
        ),
        migrations.CreateModel(
            name='operation_note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('operate_time', models.DateTimeField(blank=True, null=True)),
                ('operate_type', models.CharField(default='', max_length=2048)),
                ('old_data', models.CharField(default='', max_length=2048)),
                ('new_data', models.CharField(default='', max_length=2048)),
                ('create_time', models.DateTimeField(default=datetime.datetime.now)),
                ('remark', models.CharField(default='', max_length=2048)),
            ],
            options={
                'db_table': 'operation_note',
            },
        ),
        migrations.CreateModel(
            name='status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=28)),
                ('inst_id', models.IntegerField(default=0)),
                ('status_type', models.IntegerField(default=1)),
                ('is_enabled', models.BooleanField(default=True)),
                ('creator', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(default=datetime.datetime.now)),
                ('edit_time', models.DateTimeField(default=datetime.datetime.now)),
                ('remark', models.CharField(default='', max_length=255)),
            ],
            options={
                'db_table': 'status',
            },
        ),
        migrations.CreateModel(
            name='status_module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_id', models.IntegerField(blank=True, null=True)),
                ('module_id', models.IntegerField(blank=True, null=True)),
                ('auth_type', models.IntegerField(blank=True, null=True)),
                ('creator', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(default=datetime.datetime.now)),
                ('remark', models.CharField(default='', max_length=255)),
            ],
            options={
                'db_table': 'status_module',
            },
        ),
        migrations.CreateModel(
            name='status_user',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('creator', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(default=datetime.datetime.now)),
                ('remark', models.CharField(default='', max_length=255)),
            ],
            options={
                'db_table': 'status_user',
            },
        ),
    ]
